<launch>
    <!-- initial pose -->
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.0"/>
    <arg name="yaw" default="0.0"/>

    <arg name="robot_namespace" default="/"/>

    <!-- Sensors -->
    <arg name="2d_lidar"            default="true"  />
    <arg name="3d_lidar"            default="false" />
    <arg name="camera"              default="true"  />
    <arg name="imu"                 default="true"  />
    <arg name="gps"                 default="true"  />
    <arg name="visualize"           default="true" />

    <!-- GPU setting for Lidar -->
    <arg name="gpu"                 default="false"  />

    <!-- Lidar pose relative to base_link -->
    <arg name="lidar_x"        default="0"    />
    <arg name="lidar_y"        default="0"    />
    <arg name="lidar_z"        default="0.14" />
    <arg name="lidar_roll"     default="0"    />
    <arg name="lidar_pitch"    default="0"    />
    <arg name="lidar_yaw"      default="0"    />

    <!-- 3D Lidar name : VLP-16, HDL-32E -->
    <arg name="3d_lidar_name"       default="VLP-16" doc="3D Lidar type : [ VLP-16, HDL-32E ]" />

    <!-- Camera pose relative to base_link -->
    <arg name="camera_x"            default="0.2"  />
    <arg name="camera_y"            default="0"     />
    <arg name="camera_z"            default="0.1"   />
    <arg name="camera_roll"         default="0"     />
    <arg name="camera_pitch"        default="0"     />
    <arg name="camera_yaw"          default="0"     /> 

    <!-- Camera name to use : rgb, openni-kinect, realsense-d435 -->
    <arg name="camera_name"         default="realsense-d435" doc="Camera type : [ rgb, openni-kinect, realsense-d435 ]" />
    <arg name="camera_pointcloud"   default="true"  />

    <!-- IMU pose relative to base_link -->
    <arg name="imu_x"               default="-0.1"  />
    <arg name="imu_y"               default="0"     />
    <arg name="imu_z"               default="0.07"  />
    <arg name="imu_roll"            default="0"     />
    <arg name="imu_pitch"           default="0"     />
    <arg name="imu_yaw"             default="0"     />

    <!-- GPS pose relative to base_link -->
    <arg name="gps_x"               default="-0.1"  />
    <arg name="gps_y"               default="0.05"  />
    <arg name="gps_z"               default="0.07"  />
    <arg name="gps_roll"            default="0"     />
    <arg name="gps_pitch"           default="0"     />
    <arg name="gps_yaw"             default="0"     />

    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="true" />
    <arg name="use_sim_time" default="true" />
    <arg name="gui" default="true" />
    <arg name="headless" default="false" />
    <arg name="debug" default="true" />

    <include file="$(find scout_description)/launch/scout_mini_stock.launch">
        <arg name="robot_namespace" value="$(arg robot_namespace)"  />
        <arg name="2d_lidar"            value="$(arg 2d_lidar)"     />
        <arg name="3d_lidar"            value="$(arg 3d_lidar)"     />
        <arg name="camera"              value="$(arg camera)"       />
        <arg name="imu"                 value="$(arg imu)"          />
        <arg name="gps"                 value="$(arg gps)"          />
        <arg name="visualize"           value="$(arg visualize)"    />
        <arg name="gpu"                 value="$(arg gpu)"          />
        <arg name="lidar_x"             value="$(arg lidar_x)"      />
        <arg name="lidar_y"             value="$(arg lidar_y)"      />
        <arg name="lidar_z"             value="$(arg lidar_z)"      />
        <arg name="lidar_roll"          value="$(arg lidar_roll)"   />
        <arg name="lidar_pitch"         value="$(arg lidar_pitch)"  />
        <arg name="lidar_yaw"           value="$(arg lidar_yaw)"    />
        <arg name="3d_lidar_name"       value="$(arg 3d_lidar_name)"/>
        <arg name="camera_x"            value="$(arg camera_x)"     />
        <arg name="camera_y"            value="$(arg camera_y)"     />
        <arg name="camera_z"            value="$(arg camera_z)"     />
        <arg name="camera_roll"         value="$(arg camera_roll)"  />
        <arg name="camera_pitch"        value="$(arg camera_pitch)" />
        <arg name="camera_yaw"          value="$(arg camera_yaw)"   />
        <arg name="camera_name"         value="$(arg camera_name)"  />
        <arg name="camera_pointcloud"   value="$(arg camera_pointcloud)"/>
        <arg name="imu_x"               value="$(arg imu_x)"        />
        <arg name="imu_y"               value="$(arg imu_y)"        />
        <arg name="imu_z"               value="$(arg imu_z)"        />
        <arg name="imu_roll"            value="$(arg imu_roll)"     />
        <arg name="imu_pitch"           value="$(arg imu_pitch)"    />
        <arg name="imu_yaw"             value="$(arg imu_yaw)"       />
        <arg name="gps_x"               value="$(arg gps_x)"        />
        <arg name="gps_y"               value="$(arg gps_y)"        />
        <arg name="gps_z"               value="$(arg gps_z)"        />
        <arg name="gps_roll"            value="$(arg gps_roll)"     />
        <arg name="gps_pitch"           value="$(arg gps_pitch)"    />
        <arg name="gps_yaw"             value="$(arg gps_yaw)"      />
    </include>

    <node name="spawn_scout_model" pkg="gazebo_ros" type="spawn_model" args="-x $(arg x)
              -y $(arg y)
              -z $(arg z)
              -Y $(arg yaw)
              -unpause
              -urdf
              -param robot_description
              -model 'scout$(arg robot_namespace)'" />

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find scout_gazebo_sim)/config/scout_v2_control.yaml" command="load"/>

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="scout_state_controller scout_motor_fr_controller scout_motor_fl_controller scout_motor_rl_controller scout_motor_rr_controller"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <node name="scout_skid_steer_controller" pkg="scout_gazebo_sim" type="scout_skid_steer_controller">
        <param name="robot_namespace" type="string" value="$(arg robot_namespace)" />
    </node>
</launch> 
